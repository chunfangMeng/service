# Generated by Django 4.1.7 on 2023-04-27 08:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, help_text='创建日期')),
                ('last_update', models.DateTimeField(auto_now=True, help_text='最新一次更新')),
                ('founder', models.CharField(blank=True, help_text='创建者[username in the User table]', max_length=150, null=True)),
                ('last_editor', models.CharField(blank=True, help_text='最后修改人[username in the User table]', max_length=150, null=True)),
                ('spu_number', models.CharField(help_text='商品编号', max_length=48)),
                ('name', models.CharField(help_text='主名称', max_length=64)),
                ('sub_name', models.CharField(help_text='副名称', max_length=64)),
                ('gross_weight', models.FloatField(default=0, help_text='重量[保留两位小数点]')),
                ('net_weight', models.FloatField(default=0, help_text='净重[保留两位小数点]')),
                ('place_of_origin', models.CharField(help_text='产地', max_length=32)),
                ('item_no', models.CharField(db_index=True, help_text='货号', max_length=48)),
            ],
            options={
                'db_table': 'Product',
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, help_text='创建日期')),
                ('last_update', models.DateTimeField(auto_now=True, help_text='最新一次更新')),
                ('founder', models.CharField(blank=True, help_text='创建者[username in the User table]', max_length=150, null=True)),
                ('last_editor', models.CharField(blank=True, help_text='最后修改人[username in the User table]', max_length=150, null=True)),
                ('code', models.CharField(help_text='属性key代码', max_length=32, unique=True)),
                ('name', models.CharField(help_text='属性名称', max_length=32)),
                ('priority', models.IntegerField(default=0, help_text='优先权')),
                ('status', models.IntegerField(choices=[(0, 'Available'), (1, 'Unavailable'), (2, 'Deleted')], default=0, help_text='状态')),
            ],
            options={
                'db_table': 'product_attribute_key',
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, help_text='创建日期')),
                ('last_update', models.DateTimeField(auto_now=True, help_text='最新一次更新')),
                ('founder', models.CharField(blank=True, help_text='创建者[username in the User table]', max_length=150, null=True)),
                ('last_editor', models.CharField(blank=True, help_text='最后修改人[username in the User table]', max_length=150, null=True)),
                ('value_code', models.CharField(help_text='属性值代码', max_length=32, unique=True)),
                ('attr_value', models.CharField(help_text='属性值', max_length=48)),
                ('priority', models.IntegerField(default=0, help_text='优先权')),
                ('status', models.IntegerField(choices=[(0, 'Available'), (1, 'Unavailable'), (2, 'Deleted')], default=0, help_text='状态')),
                ('attribute_key', models.ForeignKey(help_text='属性key', on_delete=django.db.models.deletion.CASCADE, to='product.productattributekey')),
            ],
            options={
                'db_table': 'product_attribute_value',
                'unique_together': {('value_code', 'attr_value')},
            },
        ),
        migrations.CreateModel(
            name='ProductBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, help_text='创建日期')),
                ('last_update', models.DateTimeField(auto_now=True, help_text='最新一次更新')),
                ('founder', models.CharField(blank=True, help_text='创建者[username in the User table]', max_length=150, null=True)),
                ('last_editor', models.CharField(blank=True, help_text='最后修改人[username in the User table]', max_length=150, null=True)),
                ('name', models.CharField(db_index=True, help_text='商品品牌', max_length=32)),
                ('en_name', models.CharField(help_text='英文品牌', max_length=48)),
                ('status', models.IntegerField(choices=[(0, 'Init'), (1, 'Draft'), (2, 'Online'), (3, 'Deleted')], default=0, help_text='状态')),
                ('logo', models.CharField(blank=True, help_text='品牌LOGO URL', max_length=120, null=True)),
                ('info', models.CharField(blank=True, help_text='品牌信息', max_length=256, null=True)),
                ('priority', models.IntegerField(default=0, help_text='优先权')),
            ],
            options={
                'db_table': 'product_brand',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, help_text='创建日期')),
                ('last_update', models.DateTimeField(auto_now=True, help_text='最新一次更新')),
                ('founder', models.CharField(blank=True, help_text='创建者[username in the User table]', max_length=150, null=True)),
                ('last_editor', models.CharField(blank=True, help_text='最后修改人[username in the User table]', max_length=150, null=True)),
                ('name', models.CharField(db_index=True, help_text='分类名称', max_length=64)),
                ('en_name', models.CharField(help_text='英文分类名', max_length=128)),
                ('status', models.IntegerField(choices=[(0, 'Init'), (1, 'Draft'), (2, 'Online'), (3, 'Deleted')], default=0, help_text='状态')),
                ('priority', models.IntegerField(default=0, help_text='优先权')),
            ],
            options={
                'db_table': 'product_category',
            },
        ),
        migrations.CreateModel(
            name='ProductSpecs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, help_text='创建日期')),
                ('last_update', models.DateTimeField(auto_now=True, help_text='最新一次更新')),
                ('founder', models.CharField(blank=True, help_text='创建者[username in the User table]', max_length=150, null=True)),
                ('last_editor', models.CharField(blank=True, help_text='最后修改人[username in the User table]', max_length=150, null=True)),
                ('sku', models.CharField(db_index=True, help_text='商品SKU', max_length=24, unique=True)),
                ('sku_name', models.CharField(help_text='SKU值', max_length=32)),
                ('status', models.IntegerField(choices=[(0, 'Available'), (1, 'Unavailable'), (2, 'Deleted')], default=0, help_text='状态')),
                ('priority', models.IntegerField(default=0, help_text='优先权')),
                ('product', models.ForeignKey(help_text='商品', on_delete=django.db.models.deletion.CASCADE, to='product.product')),
            ],
            options={
                'db_table': 'product_specs',
            },
        ),
        migrations.CreateModel(
            name='ProductRelatedAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, help_text='创建日期')),
                ('last_update', models.DateTimeField(auto_now=True, help_text='最新一次更新')),
                ('founder', models.CharField(blank=True, help_text='创建者[username in the User table]', max_length=150, null=True)),
                ('last_editor', models.CharField(blank=True, help_text='最后修改人[username in the User table]', max_length=150, null=True)),
                ('product', models.ForeignKey(help_text='商品', on_delete=django.db.models.deletion.CASCADE, to='product.product')),
                ('product_attribute_value', models.ForeignKey(help_text='商品属性', on_delete=django.db.models.deletion.CASCADE, to='product.productattributevalue')),
            ],
            options={
                'db_table': 'product_related_attribute',
            },
        ),
        migrations.AddField(
            model_name='productattributekey',
            name='category',
            field=models.ForeignKey(blank=True, help_text='分类', null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.productcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_brand',
            field=models.ForeignKey(blank=True, help_text='商品品牌', null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.productbrand'),
        ),
        migrations.AlterUniqueTogether(
            name='productattributekey',
            unique_together={('code', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('spu_number', 'name', 'sub_name')},
        ),
    ]
